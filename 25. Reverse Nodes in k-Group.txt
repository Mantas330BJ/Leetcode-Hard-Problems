https://leetcode.com/problems/reverse-nodes-in-k-group/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        vector<ListNode*> nodes;
        while (head) {
            nodes.push_back(head);
            head = head->next;
        }
        for (int i = k - 1; i < nodes.size(); i += k) {
            for (int j = i - k + 1, t = i; j < t; --t, ++j) {
                swap(nodes[t], nodes[j]);
            }
        }
        nodes.push_back(NULL);
        
        ListNode* dummy = new ListNode();
        ListNode* h = dummy;
        for (auto& node : nodes) {
            dummy->next = node;
            dummy = dummy->next;
        }
        
        return h->next;
    }
};
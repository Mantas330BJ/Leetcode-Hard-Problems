https://leetcode.com/problems/similar-string-groups/

class Solution {
public:
    bool isSimilar(string& a, string& b) {
        int diff = 0;
        for (int k = 0; k < a.size(); ++k) {
            if (a[k] != b[k] && ++diff > 2)
                return false;
        }
        return true;
    }
    
    int numSimilarGroups(vector<string>& strs) {
        unordered_set<string> strSet(strs.begin(), strs.end());
        strs = vector<string>(strSet.begin(), strSet.end());
        vector<int> parent(strs.size());
        for (int i = 1; i < strs.size(); ++i)
            parent[i] = i;
        
        for (int i = 0; i < strs.size(); ++i) {
            for (int j = i + 1; j < strs.size(); ++j) {
                if (isSimilar(strs[i], strs[j])) {
                    int k = i;
                    while (parent[k] != k) {
                        k = parent[k];
                    }
                    int l = j;
                    while (parent[l] != l) {
                        l = parent[l];
                    }
                    parent[l] = k; 
                }
            }
        }
        unordered_set<int> diffParents;
        for (int p : parent) {
            while (p != parent[p])
                p = parent[p];
            diffParents.insert(p);
        }
        return diffParents.size();
    }
};
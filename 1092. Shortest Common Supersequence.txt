https://leetcode.com/problems/shortest-common-supersequence/

class Solution {
public:
    string shortestCommonSupersequence(string s1, string s2) {
        int dp[s1.size() + 1][s2.size() + 1];
        memset(dp, 0, (s1.size() + 1) * (s2.size() + 1) * sizeof(int));
        for (int i = 1; i <= s1.size(); ++i) {
            for (int j = 1; j <= s2.size(); ++j) {
                if (s1[i - 1] == s2[j - 1])
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                else
                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
        string ans = "";
        int i = s1.size(), j = s2.size();
        while (i > 0 && j > 0) {
            if (s1[i - 1] == s2[j - 1]) {
                ans += s1[i - 1];
                --i, --j;
            }
            else if (dp[i - 1][j] > dp[i][j - 1])
                ans += s1[--i];
            else
                ans += s2[--j];
        }
        return s2.substr(0, j) + s1.substr(0, i) + string(ans.rbegin(), ans.rend());
    }
};

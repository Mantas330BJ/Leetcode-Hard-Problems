https://leetcode.com/problems/shortest-common-supersequence/

class Solution {
public:
    string shortestCommonSupersequence(string s1, string s2) {
        vector<vector<string>> dp(s1.size() + 1, vector<string>(s2.size() + 1));
        for (int i = 1; i <= s1.size(); ++i) {
            for (int j = 1; j <= s2.size(); ++j) {
                if (s1[i - 1] == s2[j - 1])
                    dp[i][j] = dp[i - 1][j - 1] + s1[i - 1];
                else
                    dp[i][j] = dp[i - 1][j].size() > dp[i][j - 1].size() ? dp[i - 1][j] : dp[i][j - 1];
            }
        }
        int i = 0, j = 0;
        string ans = "", lcs = dp.back().back();
        for (char c : lcs) {
            while (s1[i] != c)
                ans += s1[i++];
            while (s2[j] != c)
                ans += s2[j++];
            ans += c;
            ++i, ++j;
        }
        return ans + s1.substr(i) + s2.substr(j);
        
    }
};
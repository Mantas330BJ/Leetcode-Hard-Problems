https://leetcode.com/problems/median-of-two-sorted-arrays/

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int> merged(nums1.size() + nums2.size());
        int i = 0, j = 0, k = 0;
        while (i < nums1.size() && j < nums2.size())
            merged[k++] = nums1[i] < nums2[j] ? nums1[i++] : nums2[j++];
        while (i < nums1.size())
            merged[k++] = nums1[i++];
        while (j < nums2.size())
            merged[k++] = nums2[j++];
        
        if (merged.size() % 2 == 1) {
            nth_element(merged.begin(), merged.begin() + merged.size() / 2, merged.end());
            return merged[merged.size() / 2];
        }
        nth_element(merged.begin(), merged.begin() + merged.size() / 2, merged.end());
        nth_element(merged.begin(), merged.begin() + merged.size() / 2 - 1, merged.end());
        return double(merged[merged.size() / 2] + merged[merged.size() / 2 - 1]) / 2;
    }
};
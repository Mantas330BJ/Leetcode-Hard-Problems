https://leetcode.com/problems/maximum-performance-of-a-team/

class Solution {
public:
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        int mod = 1e9 + 7;
        vector<pair<int, int>> engineers(n);
        for (int i = 0; i < n; ++i)
            engineers[i] = {efficiency[i], speed[i]};
        sort(engineers.rbegin(), engineers.rend());
        priority_queue<int, vector<int>, greater<int>> pq;
        
        long long ans = 0, speeds = 0;
        for (int i = 0; i < n; ++i) {
            speeds += engineers[i].second;
            pq.push(engineers[i].second);
            if (i >= k) {
                speeds -= pq.top();
                pq.pop();
            }
            ans = max(ans, speeds * engineers[i].first);
        }
        
        return ans % mod;
    }
};
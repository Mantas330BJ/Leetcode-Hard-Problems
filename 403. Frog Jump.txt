https://leetcode.com/problems/frog-jump/

class Solution {
public:
    unordered_map<int, unordered_set<int>> visited;
    unordered_map<int, int> indices;
    
    bool dfs(vector<int>& stones, int k, int i) {
        if (i == stones.size() - 1)
            return true;
        if (visited[i].count(k))
            return false;
        
        for (int j = max(1, k - 1); j <= k + 1; ++j) {
            if (indices.count(stones[i] + j) && dfs(stones, j, indices[stones[i] + j]))
                return true;
        }
        
        visited[i].insert(k);
        return false;
    }
    
    
    bool canCross(vector<int>& stones) {
        for (int i = 0; i < stones.size(); ++i)
            indices[stones[i]] = i;
        return dfs(stones, 0, 0);
    }
};
https://leetcode.com/problems/maximum-score-of-a-good-subarray/

class Solution {
public:
    int maximumScore(vector<int>& nums, int k) {
        int maxScore = nums[k], minVal = nums[k], i = k, j = k;
        while (i > 0 || j < nums.size() - 1) {
            if (i == 0)
                ++j;
            else if (j == nums.size() - 1)
                --i;
            else if (nums[i - 1] < nums[j + 1])
                ++j;
            else
                --i;
            minVal = min({minVal, nums[i], nums[j]});
            maxScore = max(maxScore, minVal * (j - i + 1));
        }
        return maxScore;
    }
};

